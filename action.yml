name: 'Python Tooling'
description: 'Runs python tooling on your codebase'
inputs:
  pyright:
    description: 'whether or not to run pyright. set to "true" to run'
    required: false
    default: 'false'
  pyright-args:
    description: 'additional args to pass to pyright'
    required: false
    default: ''
  ruff-linter:
    description: 'whether or not to run ruffs linter. set to "true" to run'
    required: false
    default: 'false'
  ruff-linter-args:
    description: 'additional args to pass to ruffs linter'
    required: false
    default: ''
  ruff-formatter:
    description: 'whether or not to run ruffs formatter. set to "true" to run'
    required: false
    default: 'false'
  ruff-formatter-args:
    description: 'additional args to pass to ruffs formatter'
    required: false
    default: ''
  bandit:
    description: 'whether or not to run bandit. set to "true" to run'
    required: false
    default: 'false'
  bandit-args:
    description: 'args to pass to bandit. Defaults to "-c pyproject.toml -r ."'
    required: false
    default: '-c pyproject.toml -r .'
  python-version:
    description: 'if given, python with the given version will be setup prior to running the tools. if omitted, python will not be setup.'
    required: false
    default: ''
  requirements:
    description: |
      "the path to your project's requirements file. if given, requirements will be installed after optionally installing python."
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Set up CPython Version ${{ inputs.python-version }}
      if: ${{ inputs.python-version != '' }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
    
    - name: Install Requirements
      if: ${{ inputs.requirements != '' }}
      shell: bash
      run: |
        pip install -r ${{ inputs.requirements }}

    - name: Install uv
      uses: astral-sh/setup-uv@v5
    
    - name: Run Pyright
      if: ${{ inputs.pyright == 'true' }}
      shell: bash
      fail-on-error: false
      run: |
        uvx pyright ${{ inputs.pyright-args }}
    
    - name: Run Ruff Linter
      if: ${{ inputs.ruff-linter == 'true' }}
      shell: bash
      fail-on-error: false
      run: |
        uvx ruff check --output-format=github ${{ inputs.ruff-linter-args }}

    - name: Run Ruff Formatter
      if: ${{ inputs.ruff-formatter == 'true' }}
      shell: bash
      fail-on-error: false
      run: |
        uvx ruff format --check ${{ inputs.ruff-formatter-args }}
    
    - name: Run Bandit
      if: ${{ inputs.bandit == 'true' }}
      shell: bash
      fail-on-error: false
      run: |
        uvx bandit ${{ inputs.bandit-args }}